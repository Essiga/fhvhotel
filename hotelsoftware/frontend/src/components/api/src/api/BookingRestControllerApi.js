/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BookingDataDTO from '../model/BookingDataDTO';
import BookingForm from '../model/BookingForm';
import BookingId from '../model/BookingId';
import GuestDTO from '../model/GuestDTO';
import GuestId from '../model/GuestId';
import RoomPriceDTO from '../model/RoomPriceDTO';

/**
* BookingRestController service.
* @module api/BookingRestControllerApi
* @version v0
*/
export default class BookingRestControllerApi {

    /**
    * Constructs a new BookingRestControllerApi. 
    * @alias module:api/BookingRestControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createBooking operation.
     * @callback module:api/BookingRestControllerApi~createBookingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BookingId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/BookingDataDTO} bookingDataDTO 
     * @param {module:api/BookingRestControllerApi~createBookingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BookingId}
     */
    createBooking(bookingDataDTO, callback) {
      let postBody = bookingDataDTO;
      // verify the required parameter 'bookingDataDTO' is set
      if (bookingDataDTO === undefined || bookingDataDTO === null) {
        throw new Error("Missing the required parameter 'bookingDataDTO' when calling createBooking");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BookingId;
      return this.apiClient.callApi(
        '/rest/booking/createBooking', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createGuest operation.
     * @callback module:api/BookingRestControllerApi~createGuestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GuestId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/GuestDTO} guestDTO 
     * @param {module:api/BookingRestControllerApi~createGuestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GuestId}
     */
    createGuest(guestDTO, callback) {
      let postBody = guestDTO;
      // verify the required parameter 'guestDTO' is set
      if (guestDTO === undefined || guestDTO === null) {
        throw new Error("Missing the required parameter 'guestDTO' when calling createGuest");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GuestId;
      return this.apiClient.callApi(
        '/rest/booking/createGuest', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRoomPrices operation.
     * @callback module:api/BookingRestControllerApi~getRoomPricesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RoomPriceDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/BookingRestControllerApi~getRoomPricesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RoomPriceDTO}
     */
    getRoomPrices(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = RoomPriceDTO;
      return this.apiClient.callApi(
        '/rest/booking/getRoomPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTotalRoom operation.
     * @callback module:api/BookingRestControllerApi~getTotalRoomCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Number>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/BookingForm} bookingForm 
     * @param {module:api/BookingRestControllerApi~getTotalRoomCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Number>}
     */
    getTotalRoom(bookingForm, callback) {
      let postBody = bookingForm;
      // verify the required parameter 'bookingForm' is set
      if (bookingForm === undefined || bookingForm === null) {
        throw new Error("Missing the required parameter 'bookingForm' when calling getTotalRoom");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ['Number'];
      return this.apiClient.callApi(
        '/rest/booking/getTotalRoom', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
